/*!
 * template
 * Template for jQuery projects based on 'fastShell'
 * https://github.com/verybluebot
 * @author Blue Bot
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
"use strict";!function(e,t,a,n){e(function(){if(e("#search_checkin, #search_checkout").length){var t=moment().format("MM-DD-YYYY");e("#search_checkin, #search_checkout").daterangepicker({locale:{format:"MM-DD-YYYY"},minDate:t,opens:"center",autoApply:!0,autoUpdateInput:!1},function(t,a,n){var r=t.format("MM-DD-YYYY"),s=a.format("MM-DD-YYYY"),o=e("#search_checkin"),d=e("#search_checkout"),c=e("#date-month-st"),i=e("#date-month-ed"),p=e("#date-day-st"),u=e("#date-day-ed"),h=e("#date-day-name-st"),D=e("#date-day-name-ed"),y=(new Date(r),new Date(r),new Array(7));y[0]="Sunday",y[1]="Monday",y[2]="Tuesday",y[3]="Wednesday",y[4]="Thursday",y[5]="Friday",y[6]="Saturday";var l=new Date(r);h.text(y[l.getDay()]);var f=new Date(s);D.text(y[f.getDay()]);var Y=new Array;Y[0]="January",Y[1]="February",Y[2]="March",Y[3]="April",Y[4]="May",Y[5]="June",Y[6]="July",Y[7]="August",Y[8]="September",Y[9]="October",Y[10]="November",Y[11]="December";var m=new Date(r);c.text(Y[m.getMonth()]);var v=new Date(s);i.text(Y[v.getMonth()]);var w=new Date(r);p.text(w.getDate());var k=new Date(s);u.text(k.getDate()),o.val(r),d.val(s);var g=d.data("daterangepicker");g.setStartDate(r),g.setEndDate(s);var M=o.data("daterangepicker");M.setStartDate(r),M.setEndDate(s)})}e("#search_checkin, #search_checkout").on("focus",function(){e("p.date-input_info").find("span.pre-start-date").css("display","none"),e("p.date-input_info").find("span.aft-date").css("display","block"),e("p.date-input_info").find("i.date-icon ").css({position:"absolute",top:"10px",left:"10px","font-size":"13px",color:"#81275a"})}),e(".hotels-slider").cardsSlider({slidesToShow:5,responsive:[{breakpoint:767,settings:{slidesToShow:3}},{breakpoint:450,settings:{slidesToShow:1}}]})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
